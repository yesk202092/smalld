spring:
  datasource:
    name: mysql_test
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
      #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.cj.jdbc.Driver
      #基本属性
      url: jdbc:mysql://192.168.0.50:3306/user?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=Asia/Shanghai
      username: 'root'
      password: '123456'
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20

  cloud:
    # nacos配置
    nacos:
      discovery:
        server-addr: localhost:8848
        username: nacos
        password: nacos
        namespace: d9d2dace-5e7d-4977-bc1b-f5da4a5cbbb1
      config:
        server-addr: localhost:8848 #Nacos配置中心地址
        file-extension: yml #指定yml格式的配置
        username: nacos
        password: nacos
        namespace: d9d2dace-5e7d-4977-bc1b-f5da4a5cbbb1
    # gateway配置
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowed-origins-patterns: "*"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
      discovery:
        locator:
          lowerCaseServiceId: true
          enabled: true
      routes:
        - id: user-center
          uri: lb://user-center
          predicates:
            - Path=/user/** #访问需要加上这个
          filters:
            - StripPrefix=1 #去掉Path中前1个节点
            - name: Retry
              args:
                retries: 1 #重试次数
        - id: test-center
          uri: lb://test-center
          predicates:
            - Path=/test/** #访问需要加上这个
          filters:
            - StripPrefix=1 #去掉Path中前1个节点
            - name: Retry
              args:
                retries: 1 #重试次数

# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放
management:
  endpoints:
    web:
      exposure:
        include: "*"
    health:
      show-details: "ALWAYS"